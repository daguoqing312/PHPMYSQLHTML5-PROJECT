<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">

	<!-- <debug /> <global-method-security pre-post-annotations="enabled" /> 
		<http pattern="/static/**" security="none"/> <http pattern="/logout" security="none"/> -->

	<http auto-config="true">
		<intercept-url pattern="/"
			access="ROLE_USER, ROLE_MANAGER, ROLE_ADMIN" />
		<intercept-url pattern="/user"
			access="ROLE_USER, ROLE_MANAGER, ROLE_ADMIN" />
		<intercept-url pattern="/manager" access="ROLE_MANAGER, ROLE_ADMIN" />
		<intercept-url pattern="/admin" access="ROLE_ADMIN" />


		<intercept-url pattern="/**"
			access="ROLE_USER, ROLE_MANAGER, ROLE_ADMIN" />
		<form-login login-page="/login" default-target-url="/user"
			authentication-failure-url="/loginfailed" />
		<logout logout-success-url="/logout" />
	</http>

	<authentication-manager>
		<authentication-provider>
			<jdbc-user-service data-source-ref="dataSource"

				users-by-username-query="
					select username,password, enabled 
					from users where USERNAME=?"

				authorities-by-username-query="
					select u.username, ur.authority from users u, user_roles ur 
					where u.user_id = ur.user_id and u.username =?  " />
		</authentication-provider>
	</authentication-manager>

</beans:beans>